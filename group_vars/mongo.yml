---

mongodb_replication_replset: rp0                  # Enable replication <setname>[/<optionalseedhostlist>]
mongodb_replication_replindexprefetch: "all"      # specify index prefetching behavior (if secondary) [none|_id_only|all]
mongodb_replication_oplogsize: 1024               # specifies a maximum size in megabytes for the replication operation log
mongodb_package: mongodb
mongodb_version: "3.6"
mongodb_security_authorization: "enabled"
mongodb_set_parameters: { "enableLocalhostAuthBypass": "true", "authenticationMechanisms": "SCRAM-SHA-1,MONGODB-CR" }
mongodb_user_admin_name: siteUserAdmin
mongodb_user_admin_password: B4sDAyjgXFrgsBUxyNXCvach
mongodb_net_bindip: 127.0.0.1
mongodb_login_host: "{{ hostvars[groups['mongo_master'][0]].ansible_default_ipv4.address }}"

mongodb_users:
  - {
    name: testUser,
    password: W3qasWsKL3UaLhYNBJGM6hKs,
    roles: readWrite,
    database: admin
  }

ufw_rules:
  - { port: 22, rule: allow, from_ip: '193.150.109.220', comment: 'Allow to ssh from our ip1' }
  - { port: 22, rule: allow, from_ip: '176.116.141.0/24', comment: 'Allow to ssh from home inet provider subnet' }
  - { port: 27017, rule: allow, from_ip: "{{ hostvars[groups['mongo'][0]].ansible_ens8.ipv4.address }}", comment: 'Allow to mongo from mongo1' }
  - { port: 27017, rule: allow, from_ip: "{{ hostvars[groups['mongo'][1]].ansible_ens8.ipv4.address }}", comment: 'Allow to mongo from mongo2' }
  - { port: 27017, rule: allow, from_ip: "{{ hostvars[groups['mongo'][2]].ansible_ens8.ipv4.address }}", comment: 'Allow to mongo from mongo3' }
  - { from_ip: '127.0.0.1/8', comment: 'Allow localhost' }

ufw_default_input_policy: DROP
ufw_default_output_policy: ACCEPT
ufw_default_forward_policy: DROP
ufw_reset: no
